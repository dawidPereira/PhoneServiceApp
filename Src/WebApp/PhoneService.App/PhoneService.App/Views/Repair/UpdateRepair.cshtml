@model PhoneService.Core.Models.Repair.RepairUpdateRequest
<h2>Dodaj części zamienne dla naprawy <small>#@Model.RepairId</small> <span class="badge badge-primary" title="Status">Status: @Model.StatusId</span></h2>
<br />
<h5>Opis usterki</h5>
<hr />
<p class="card"><span class="card-body">
        @Model.Description
</span></p>

<br />
<h5>Wycena usterki i zarządzanie naprawą</h5>
<hr />
<p>Wykaz części wymaganych do naprawy</p>
<table class="table table-stripped">
    <thead>
        <tr>
            <th>#</th>
            <th>Nazwa</th>
            <th>Numer referencyjny</th>
            <th>Cena jednostkowa</th>
            <th>Ilość</th>
            <th>Suma</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.RepairItems != null)
        {
            if (Model.RepairItems.Any())
            {
                foreach (var item in @Model.RepairItems)
                {
                    <tr>
                        <td>@item.SaparePartId</td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>@item.Quantity</td>
                        <td></td>
                    </tr>
                }
            }
        }
    </tbody>
</table>
<hr />
<div>
    <button type="button" class="btn btn-info float-right" data-toggle="modal" data-target="#listItems"><i class="fa fa-plus" aria-hidden="true"></i> Dodaj część</button>
    <br />
    <!-- <div style="display: none" id="listItems">
        @await Component.InvokeAsync("RepairForSaparePartSelectComponent", new { productId = @Model.ProductId })
    </div> -->
    <!-- Modal -->
    <div class="modal fade" id="listItems" tabindex="-1" role="dialog" aria-labelledby="modelTitleId" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Dodaj część do wyceny</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                    </div>
                    <div class="modal-body">
                        @await Component.InvokeAsync("RepairForSaparePartSelectComponent", new { productId = @Model.ProductId })
                    </div>
                </div>
            </div>
        </div>
</div>
<div>
    <form id="form" asp-controller="Repair" asp-action="UpdateRepair" asp-route-repairId="" method="post" asp-antiforgery="true"
          asp-route-quantity="" asp-route-saparepartId="">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="CustomerId" />
        <input type="hidden" asp-for="Description" />
        <input type="hidden" asp-for="ProductId" />
        <input type="hidden" asp-for="RepairId" />
        <input type="hidden" asp-for="Links.DecisionLink" />
        <input type="hidden" asp-for="StatusId" value="2" />
        @if (Model.RepairItems != null)
        {
            for (int i = 0; i < Model.RepairItems.Count; i++)
            {
                @Html.EditorFor(x => Model.RepairItems[i], "RepairItemTemplate")
            }
        }
        <div class="form-group">
            <button type="submit" onclick="submit()" class="btn btn-success btn-lg"><i class="fa fa-check" aria-hidden="true"></i> Zapisz wycenę</button>
        </div>
    </form>
</div>

<script type="text/javascript">
    function showStuff(id) {
        document.getElementById(id).style.display = 'block';
    }
</script>
